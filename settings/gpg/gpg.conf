# mempo.org recommended gpg client configuration, config version 1.1 ; See http://mempo.org secure privacy.
#
# INSTALLATION: save this file on each user as:
# ~/.gnupg/gpg.conf
# DEPENDENCY: First also configure properly:
# * tor client 
# * use privoxy and configure it to use tor, edit: /etc/privoxy/config
#   and there uncomment (or add) line: forward-socks5   / 127.0.0.1:9050 .
# TEST:
# * if you execute now command like "gpg -k" you will see nice long user ID
# * if you enabled Tor: try:  gpg  --recv-key "33D38C8797A7A35ED8BCAF1F4EBE40EAEFF62C7F" # will say if used .onion 
#
# This is based on: https://help.riseup.net/en/security/message-security/openpgp/best-practices

#-----------------------------
# suggested (try if that works well for you, or edit/disable)
#-----------------------------

# you CAN set up here default key:
#default-key 0xXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Try to use the GnuPG-Agent. With this option, GnuPG first tries to connect to
# the agent before it asks for a passphrase.
use-agent

# IF you have Tor, then use this. Configure tor properly:
# You MUST enable IsolateDestPort and IsolateDestAddr in torrc or else it might LOWER security.
# (Or use dedicated SOCKSPort for GnuPG)
# -THEN- uncomment this line for new gpg:
### keyserver-options http-proxy=socks5-hostname://127.0.0.1:9050
# -OR- instead, for debian 7 etc, instead use this but first install privoxy and uncomment it's config upstream to use tor 9050
keyserver-options http-proxy=http://127.0.0.1:8118

# if you enabled TOR in either the options with http-proxy above, then also use this tor server:
keyserver hkp://qdigse2yzvuglcix.onion

# Don't leak DNS, see https://trac.torproject.org/projects/tor/ticket/2846
keyserver-options no-try-dns-srv

#====================================================================
# All the options below are probably very good and there should be no reason to edit/comment them out. Use them :)

#-----------------------------
# enforce good behavior 
#-----------------------------

# Disable inclusion of the version string in ASCII armored output (for better privacy)
no-emit-version

# Disable comment string in clear text signatures and ASCII armored messages
no-comments

# Display long key IDs (to avoid mistakes, spoof)
keyid-format 0xlong

# List all keys (or the specified ones) along with their fingerprints
with-fingerprint

# Display the calculated validity of user IDs during key listings
list-options show-uid-validity
verify-options show-uid-validity

# When using --refresh-keys, if the key in question has a preferred keyserver
# URL, then disable use of that preferred keyserver to refresh the key from
keyserver-options no-honor-keyserver-url

# When searching for a key with --search-keys, include keys that are marked on
# the keyserver as revoked
keyserver-options include-revoked

#-----------------------------
# algorithm and ciphers
#-----------------------------

# list of personal digest preferences. When multiple digests are supported by
# all recipients, choose the strongest one
personal-cipher-preferences AES256 AES192 AES CAST5

# list of personal digest preferences. When multiple ciphers are supported by
# all recipients, choose the strongest one
personal-digest-preferences SHA512 SHA384 SHA256 SHA224

# message digest algorithm used when signing a key
cert-digest-algo SHA512

# This preference list is used for new keys and becomes the default for
# "setpref" in the edit menu
default-preference-list SHA512 SHA384 SHA256 SHA224 AES256 AES192 AES CAST5 ZLIB BZIP2 ZIP Uncompressed

#====================================================================
#-----------------------------
# not used now options/comments/examples
#-----------------------------
# Provide a certificate store to override the system default
# Get this from https://sks-keyservers.net/sks-keyservers.netCA.pem
# keyserver-options ca-cert-file=/usr/local/etc/ssl/certs/hkps.pool.sks-keyservers.net.pem

